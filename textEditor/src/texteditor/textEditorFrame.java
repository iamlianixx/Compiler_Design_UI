/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package texteditor;

/**
 *
 * @author Jullian
 */
import java.io.*;
import java.io.File.*;
import java.util.*;
import javax.swing.JFileChooser;

public class textEditorFrame extends javax.swing.JFrame {

    /**
     * Creates new form textEditorFrame
     */
    public textEditorFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setText("Save");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setText("Load");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(10000);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void addText(String text)
    {
        jTextArea1.setText(jTextArea1.getText() + text);
        
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
      
  try
  {
    JFileChooser loadEmp = new JFileChooser();//new dialog
    File selectedFile;//needed*
    BufferedReader in;//needed*
    FileReader reader = null;//needed*,look these three up for further info
   
    //opens dialog if button clicked
    if (loadEmp.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
    {
      //gets file from dialog
      selectedFile = loadEmp.getSelectedFile();
      //makes sure files can be processed before proceeding
      if (selectedFile.canRead() && selectedFile.exists())
      {
      reader = new FileReader(selectedFile);
      }
    }
   
   in = new BufferedReader(reader);
   
    //inputLine recieves file text
    String inputLine = in.readLine();
    int LineNumber = 0;
    
      jTextArea1.setText("");
      
    while(inputLine!=null)
    {
      //LineNumber isn't needed, but it adds a line count on the left, nice
      LineNumber++;
      StringTokenizer tokenizer = new StringTokenizer(inputLine);
     
      
      addText(inputLine + "\n");
      //next line in File opened
      inputLine = in.readLine();
    }
    //close stream, files stops loading
    in.close();
  }
  //catches input/output exceptions and all subclasses exceptions
  catch(IOException ex)
  {
    addText("Error occured :\n" + ex.getMessage()+"\n");
  }
  //catches nullpointer exception, file not found
  catch(NullPointerException ex)
  {
    addText("NullpointerException...");
  }
    
    
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
   
try
  {
      
    // These are generic variable names.. From some old tutorial :)
    JFileChooser loadEmp = new JFileChooser();
    File selectedFile;
    BufferedReader in;
    FileWriter writer = null;
   
    
    if (loadEmp.showSaveDialog(this)==JFileChooser.APPROVE_OPTION)
    {
     
      selectedFile = loadEmp.getSelectedFile();
      
      
       BufferedWriter out = new BufferedWriter(new FileWriter(selectedFile));
        out.write(jTextArea1.getText());
         out.close();
      
    }
   
  
    
  }
  //catches input/output exceptions and all subclasses exceptions
  catch(IOException ex)
  {
    addText("Error occured :\n" + ex.getMessage()+"\n");
  }
  //catches nullpointer exception, file not found
  catch(NullPointerException ex)
  {
    addText("NullpointerException...");
  }
          
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(textEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(textEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(textEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(textEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new textEditorFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration
}
