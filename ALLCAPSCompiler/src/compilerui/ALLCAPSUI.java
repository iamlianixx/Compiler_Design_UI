/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package compilerui;

import java.util.ArrayList;
import javax.swing.JFileChooser;

/**
 *
 * @author Jullian
 */
public class ALLCAPSUI extends javax.swing.JFrame {

    /**
     * Creates new form ALLCAPSUI
     */
    public ALLCAPSUI() {
        initComponents();
        chooser = new JFileChooser("C:/");
        allCapsFilter = new ALLCAPSFilter();
        lineNums = new TextLineNumber(editorTextArea);
        jScrollPane1.setRowHeaderView(lineNums);
      //  chooser.setAcceptAllFileFilterUsed(true);
        chooser.setFileFilter(allCapsFilter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        editorTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        compileMenu = new javax.swing.JMenu();
        exitMenu = new javax.swing.JMenu();

        jMenu1.setText("jMenu1");

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ALLCAPS Compiler");
        setMaximumSize(new java.awt.Dimension(436, 452));
        setResizable(false);

        editorTextArea.setColumns(20);
        editorTextArea.setRows(5);
        jScrollPane1.setViewportView(editorTextArea);

        outputTextArea.setColumns(20);
        outputTextArea.setEditable(false);
        outputTextArea.setRows(5);
        jScrollPane2.setViewportView(outputTextArea);

        jLabel1.setText("Output");

        compileMenu.setText("Compile");
        compileMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                compileMenuMouseClicked(evt);
            }
        });
        compileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(compileMenu);

        exitMenu.setText("Exit");
        exitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(exitMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void compileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileMenuActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_compileMenuActionPerformed

    private void compileMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compileMenuMouseClicked
        // TODO add your handling code here:
        outputTextArea.setText(" ");
        if(editorTextArea.getText().equals("")){
            outputTextArea.setText("");
        } else {
        Lexical lex = new Lexical(editorTextArea.getText(),new SymbolTable());
        lex.generateLexemes();
        ArrayList<Token> tok = lex.fillSymbolTable();
        lex.symbolTable.display();
        Parser p = new Parser(tok);
        boolean check = p.LLParser();
           if(check == true){
               outputTextArea.setText("Syntax Error..");
           } else {
               ParseTree tree = p.grabTree();
               ASTConverter ast = new ASTConverter();
               ast.convertTree(tree.getRoot());
               ast.displayAST(tree.getRoot());
               SemanticAnalyzer s = new SemanticAnalyzer(tree, lex.symbolTable);
               if(s.getSemanticErrorMessage().equals("Success!")){
                  Generator g = new Generator(tok);
                  g.convertCode2Java();
                  ArrayList<String> output = g.compileFile();
                  for(int i=0; i<output.size(); i++){
                      outputTextArea.setText(outputTextArea.getText() + output.get(i));
                      outputTextArea.setText(outputTextArea.getText() + "\n");
                  }
               } else {
                   outputTextArea.setText(outputTextArea.getText() + "\n" + s.getSemanticErrorMessage());
               }
           }
        }
    }//GEN-LAST:event_compileMenuMouseClicked

    private void exitMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMenuMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMenuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ALLCAPSUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ALLCAPSUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ALLCAPSUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ALLCAPSUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ALLCAPSUI().setVisible(true);
            }
        });
    }
    
    private TextLineNumber lineNums;
    private final JFileChooser chooser;
    private final ALLCAPSFilter allCapsFilter;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu compileMenu;
    private javax.swing.JTextArea editorTextArea;
    private javax.swing.JMenu exitMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea outputTextArea;
    // End of variables declaration//GEN-END:variables
}
